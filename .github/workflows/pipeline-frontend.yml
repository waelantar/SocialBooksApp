name: BSN Frontend Pipeline

on:
  push:
    branches:
      - ci/pipeline
    paths:
      - SocialBooksAppFrontend/**
      - docker/frontend/**
      - 'docker-compose.yml'
      - .github/workflows/*-frontend.yml

jobs:
  build-image:
    name: Build FE Docker image
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Extract project version
        id: extract_version
        run: |
          cd SocialBooksAppFrontend
          echo "VERSION=$(jq -r '.version' package.json)" >> $GITHUB_ENV

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build & Push to DockerHub
        uses: docker/build-push-action@v5
        with:
          context: SocialBooksAppFrontend
          file: docker/frontend/Dockerfile
          push: true
          platforms: linux/amd64
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/bsn-ui:latest,${{ secrets.DOCKERHUB_USERNAME }}/bsn-ui:${{ env.VERSION }}

  deploy:
    name: Deploy Frontend
    runs-on: ubuntu-20.04
    needs: [build-image]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Create environment file
        run: |
          echo "VERSION=${{ env.VERSION }}" >> .env
          echo "MAIL_USERNAME=${{ secrets.MAIL_USERNAME }}" >> .env
          echo "MAIL_PASSWORD=${{ secrets.MAIL_PASSWORD }}" >> .env
          echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> .env
          echo "DB_USERNAME=${{ secrets.DB_USERNAME }}" >> .env
          echo "TOKEN_EXPIRATION=${{ secrets.TOKEN_EXPIRATION }}" >> .env
          echo "TOKEN_KEY=${{ secrets.TOKEN_KEY }}" >> .env
          echo "DB_URL=${{ secrets.DB_URL }}" >> .env
          echo "ACTIVE_PROFILE=${{ secrets.ACTIVE_PROFILE }}" >> .env

      - name: Deploy with Docker Compose
        run: |
          docker compose -f docker-compose.yml pull -q
          docker compose -f docker-compose.yml up -d --build
